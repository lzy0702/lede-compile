name: Test jobs

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: lede2.config
  KERNEL_CONFIG_FILE: kernel2.config
  KERNEL_CONFIG_FILE2: config5.15
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: America/New_York

jobs:
  job_1:
    name: Compile Openwrt Toolchain
    runs-on: ubuntu-latest
    steps:

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          #sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt purge *dotnet* *android* azure*
          sudo -E apt purge google-cloud-sdk microsoft-edge-stable google-chrome-stable firefox powershell hhvm
          sudo -E apt purge llvm*dev libllvm* temurin*jdk clang-tools* libclang* *mysql* llvm* clang*
          sudo -E rm -rf /usr/share/dotnet
          sudo -E rm -rf /usr/local/lib/android
          sudo -E rm -rf /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq upgrade
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo -E apt autoremove
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          df -h

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Load custom feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          cd openwrt

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a
    
      - name: Check space usage
        if: (!cancelled())
        run: df -hT 

      - name: Load custom configuration
        id: config1
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          echo ".config moved to openwrt/"
          cd openwrt
        
      - name: Download package pre-config
        id: package1
        run: |
          cd openwrt
          make defconfig
          make download -j8
          cd ..
          mkdir -p openwrt/build_dir 
          mkdir -p openwrt/staging_dir 
          mkdir -p openwrt/.ccache
          

      - name: Tar working directories
        id: tar-c-working_dir
        run: tar "-I zstd -9 -T0" -cf directories.tar.zst openwrt/build_dir openwrt/staging_dir openwrt/.ccache

      - name: Upload Compiled Directories
        uses: actions/upload-artifact@main
        with:
          name: build_dir
          path: directories.tar.zst
          retention-days: 1

      - name: Tar Miscellaneous files
        id: tar-c-misc
        run: tar "-I zstd -9 -T0" -cf misc.tar.zst openwrt/.config

      - name: Upload Miscellaneous files
        uses: actions/upload-artifact@main
        with:
          name: misc
          path: |
            misc.tar.zst
            retention-days: 1
  job_2:
    name: Compile Openwrt Linux Kernel
    needs: job_1
    runs-on: ubuntu-latest
    steps:

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          #sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt purge *dotnet* *android* azure*
          sudo -E apt purge google-cloud-sdk microsoft-edge-stable google-chrome-stable firefox powershell hhvm
          sudo -E apt purge llvm*dev libllvm* temurin*jdk clang-tools* libclang* *mysql* llvm* clang*
          sudo -E rm -rf /usr/share/dotnet
          sudo -E rm -rf /usr/local/lib/android
          sudo -E rm -rf /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq upgrade
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo -E apt autoremove
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          df -h

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Load custom feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          cd openwrt

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load Miscellaneous files
        uses: actions/download-artifact@main
        with:
          name: misc
          path: |
            misc.tar.zst
            retention-days: 1
            
      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
      - name: Release Miscellaneous files
        id: tar-x-misc1
        run: |
          ls -a 
          tar -xf misc.tar.zst
          ls -a
          rm misc.tar.zst
          ls -a

      - name: Download package pre-config
        id: package1
        run: |
          ls -a
          cd openwrt
          make defconfig
          make download -j8
          ls -a
      
      - name: Load Compiled Directories
        uses: actions/download-artifact@main
        with:
          name: build_dir
          path: directories.tar.zst
      
      - name: Release working directories
        id: tar-x-working_dir
        run: |
          ls -a
          tar -xf directories.tar.zst
          rm directories.tar.zst
          ls -a
          
      - name: clean working dir artifacts
        id: clean-working_dir-artifact
        run: touch directories.tar.zst

      - name: Upload Compiled Directories
        uses: actions/upload-artifact@main
        with:
          name: build_dir
          path: directories.tar.zst
          retention-days: 1
